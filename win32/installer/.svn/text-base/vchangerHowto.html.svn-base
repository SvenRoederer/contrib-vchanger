<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
	<META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset=windows-1252">
	<TITLE></TITLE>
	<META NAME="GENERATOR" CONTENT="OpenOffice.org 2.4  (Win32)">
	<META NAME="CREATED" CONTENT="20061109;11301500">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGED" CONTENT="20090414;10303499">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<META NAME="CHANGEDBY" CONTENT="Josh Fisher">
	<STYLE TYPE="text/css">
	<!--
		@page { size: 8.5in 11in; margin: 0.79in }
		P { margin-left: 0.2in; margin-top: 0.01in; margin-bottom: 0.08in }
		P.western { font-family: "Times New Roman", serif; font-size: 12pt }
		TD P { margin-left: 0.2in; margin-top: 0.01in; margin-bottom: 0.08in }
		TD P.western { font-family: "Times New Roman", serif; font-size: 12pt }
		H1 { margin-left: 0.2in; margin-bottom: 0.08in }
		H1.western { font-family: "Times New Roman", serif; font-size: 20pt }
		H1.cjk { font-family: "Lucida Sans Unicode"; font-size: 16pt }
		H1.ctl { font-family: "Tahoma"; font-size: 16pt }
		H3 { margin-left: 0.2in; margin-bottom: 0.08in }
		H3.western { font-family: "Albany", sans-serif }
		H3.cjk { font-family: "HG Mincho Light J" }
		H3.ctl { font-family: "Arial Unicode MS" }
		PRE { margin-left: 0.4in }
		TD P.col1-western { margin-left: 0.4in; font-family: "Times New Roman", serif; font-size: 12pt }
		TD P.col1-cjk { margin-left: 0.4in }
		TD P.col1-ctl { margin-left: 0.4in }
		P.text-body-indent-western { margin-bottom: 0.04in; font-family: "Times New Roman", serif; font-size: 12pt }
		P.text-body-indent-cjk { margin-bottom: 0.04in }
		P.text-body-indent-ctl { margin-bottom: 0.04in }
		P.text-body-indent-2-western { margin-left: 0.4in; margin-bottom: 0.04in; font-family: "Times New Roman", serif; font-size: 12pt }
		P.text-body-indent-2-cjk { margin-left: 0.4in; margin-bottom: 0.04in }
		P.text-body-indent-2-ctl { margin-left: 0.4in; margin-bottom: 0.04in }
		P.text-body-indent-3-western { margin-left: 0.6in; margin-bottom: 0.04in; font-family: "Times New Roman", serif; font-size: 12pt }
		P.text-body-indent-3-cjk { margin-left: 0.6in; margin-bottom: 0.04in }
		P.text-body-indent-3-ctl { margin-left: 0.6in; margin-bottom: 0.04in }
	-->
	</STYLE>
</HEAD>
<BODY LANG="en-US" DIR="LTR">
<P CLASS="western" STYLE="margin-top: 0.17in; page-break-after: avoid">
<FONT SIZE=5 STYLE="font-size: 20pt"><B>Vchanger Howto</B></FONT></P>
<H3 CLASS="western">Josh Fisher</H3>
<P CLASS="western" STYLE="margin-top: 0in; margin-bottom: 0in">&lt;jfisher
at jaybus dot com&gt;</P>
<P CLASS="western" STYLE="margin-top: 0in; margin-bottom: 0in"><BR>
</P>
<P CLASS="western" STYLE="margin-top: 0in; margin-bottom: 0in"><B>Revision
History</B></P>
<P CLASS="western" STYLE="margin-top: 0.1in; margin-bottom: 0in">Revision
0.8.2 2009-04-14</P>
<P CLASS="text-body-indent-3-western">Fixed some config file typos in
the howto examples.</P>
<P CLASS="western" STYLE="margin-top: 0.1in; margin-bottom: 0in">Revision
0.8.1 2009-01-27</P>
<P CLASS="text-body-indent-3-western">Documented addition of command
line flags for specifying uid and gid vchanger should run as when
invoked by root. Fixed examples to coincide with changes to the
by-label-fix udev rules for multi-magazine autochangers.</P>
<P CLASS="western" STYLE="margin-top: 0.1in; margin-bottom: 0in">Revision
0.8.0 2008-10-01</P>
<P CLASS="text-body-indent-3-western">Initial beta release</P>
<P CLASS="western" STYLE="margin-top: 0.1in; margin-bottom: 0in">The
vchanger utility implements the <A HREF="http://www.bacula.org/en/rel-manual/Autochanger_Resource1.html#SECTION0032120000000000000000">Bacula
Autochanger Interface</A> API to provide a disk-based virtual
autochanger backup device for use with <A HREF="http://www.bacula.org/"><FONT FACE="Times New Roman, serif">Bacula</FONT></A><A HREF="http://www.bacula.org/"><SUB><FONT FACE="Times New Roman, serif">&reg;</FONT></SUB></A>,
an open source network backup solution.</P>
<P CLASS="western" STYLE="margin-top: 0.1in; margin-bottom: 0in"><BR>
</P>
<HR>
<H1 CLASS="western">Table of Contents</H1>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>1.
<A HREF="#introduction">Introduction</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>1.1
<A HREF="#copyright">Copyright And License</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>1.2.
<A HREF="#disclaimer">Disclaimer</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>1.3.
<A HREF="#credits">Credits / Contributors</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>1.4.
<A HREF="#feedback">Feedback</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>2.
<A HREF="#definitions">Definitions</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>3.
<A HREF="#overview">Overview</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>4.
<A HREF="#implementation">Virtual Autochanger Implementation</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>4.1.
<A HREF="#virtual_magazines">Virtual Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>4.2.
<A HREF="#multi-magazine">Multi-magazine Autochangers</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>5.
<A HREF="#install">Installing vchanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>5.1.
<A HREF="#bylabel">The &ldquo;by-label&rdquo; Fix</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>5.2.
<A HREF="#install_win32">Installing the Windows Version</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>6.
<A HREF="#preparing">Preparing Removable Drives</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>6.1.
<A HREF="#preparing_linux">Preparing Drives for Linux</A></FONT></FONT></P>
<P CLASS="text-body-indent-3-western"><FONT FACE="Arial"><FONT SIZE=3>6.1.1.
<A HREF="#partition">Partitioning the Drive</A></FONT></FONT></P>
<P CLASS="text-body-indent-3-western"><FONT FACE="Arial"><FONT SIZE=3>6.1.2.
<A HREF="#formatting">Formatting / Labeling the Partition file system</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>6.2.
<A HREF="#preparing_win32">Preparing Drives for Windows</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>7.
<A HREF="#mounting">Mounting Removable Disk Drives</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>7.1.
<A HREF="#udev">udev and Hot-swappable Drives</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>7.2.
<A HREF="#autofs">Using autofs to Mount Removable Drive Partitions</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>7.3.
<A HREF="#mounting_win32">Mounting Removable Drives On Windows</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>8.
<A HREF="#vchanger_config">Configuring vchanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>9.
<A HREF="#initialize">Initializing New Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>10.
<A HREF="#testing">Testing vchanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>11.
<A HREF="#configuring_bacula">Configuring Bacula To Use The
Autochanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>11.1.
<A HREF="#sd_config">Configuring the Bacula Storage Daemon</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>11.2.
<A HREF="#dir_config">Configuring the Bacula Director</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>12.
<A HREF="#using">Using The Autochanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>12.1.
<A HREF="#labeling_volumes">Labeling Volumes In New Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>12.2.
<A HREF="#insert_mag">Inserting Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>12.3.
<A HREF="#eject_mag">Ejecting Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>12.4.
<A HREF="#magazine_change">Changing Magazines</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>13.
<A HREF="#examples">Example Autochanger Configurations</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>13.1.
<A HREF="#example_single">Single-magazine Single-drive Autochanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>13.2.
<A HREF="#example_multi">Multi-magazine Multi-drive Autochanger</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>13.3.
<A HREF="#example_win32">Windows Autochangers</A></FONT></FONT></P>
<P CLASS="text-body-indent-western"><FONT FACE="Arial"><FONT SIZE=3>Appendix
A. <A HREF="#vchanger_commands">vchanger Commands</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.1.
<A HREF="#command_list">list Command</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.2.
<A HREF="#command_slots">slots Command</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.3.
<A HREF="#command_load">load Command</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.4.
<A HREF="#command_unload">unload Command</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.5.
<A HREF="#command_loaded">loaded Command</A></FONT></FONT></P>
<P CLASS="text-body-indent-2-western"><FONT FACE="Arial"><FONT SIZE=3>A.6.
<A HREF="#command_initmag">initmag Command</A></FONT></FONT></P>
<H1 CLASS="western"><A NAME="introduction"></A>1. Introduction</H1>
<P CLASS="western">This document describes how to utilize disk
storage, particularly removable disk storage devices, as media for a
backup solution using <A HREF="http://www.bacula.org/">Bacula</A>.
Although not yet well documented, Bacula already includes a shell
script named <I>disk-changer</I> that provides for a disk-based
virtual autochanger on most POSIX systems. The <I>disk-changer</I>
script, as part of the Bacula distribution, has undergone extensive
regression testing. However, <I>disk-changer</I> is not designed to
work with a pool of multiple disk drives and does not emulate
removable &ldquo;magazines&rdquo;. Vchanger is an executable program
written in C++ that extends the functionality of <I>disk-changer</I>
with the following features:</P>
<UL>
	<LI><P CLASS="western">C++ program runs on Windows XP / Windows
	Server 2003 or newer in addition to Linux and other POSIX operating
	systems</P>
	<LI><P CLASS="western">Allows a single autochanger to utilize
	multiple storage locations (directories/mountpoints) for its virtual
	slots</P>
	<LI><P CLASS="western">Cleanly handles the situation where a
	removable disk drive, after having been previously unmounted with
	one or more of its slots still &ldquo;loaded&rdquo; into a virtual
	drive, is re-mounted</P>
	<LI><P CLASS="western">Automatically generates volume barcodes
	without an additional barcode definition file</P>
	<LI><P CLASS="western">Uses the barcode volume label name as the
	filename for a volume file</P>
	<LI><P CLASS="western">Adds the concept of naming autochangers. When
	using multiple autochangers, this can be used to assign &ldquo;magazines&rdquo;
	(removable drives) to a particular autochanger and prevent other
	autochangers from using them should they be inadvertently mounted at
	the wrong mountpoint.</P>
	<LI><P CLASS="western">Adds an extended API command, <I>initmag</I>,
	to initialize a new magazine</P>
</UL>
<P CLASS="western">Vchanger <SPAN STYLE="font-style: normal">was
designed to be used with Bacula to utilize removable disk drives as
backup media for a backup solution for small businesses, home
networks, or the subset of Bacula users for whom backing up to
removable disk drives makes practical sense.</SPAN></P>
<P CLASS="western">What follows is a description of vchanger and a
method of utilizing removable drives as the backup media for a backup
solution using vchanger with <A HREF="http://www.bacula.org/">Bacula</A>.</P>
<H3 CLASS="western"><A NAME="copyright"></A>1.1 Copyright And License</H3>
<P CLASS="western">This document, Vchanger<EM> HOWTO</EM>, is
Copyright (c) 2008-2009 by <EM><SPAN STYLE="font-style: normal">Josh
Fisher</SPAN></EM>. Permission is granted to copy, distribute and/or
modify this document under the terms of the GNU Free Documentation
License, Version 1.1 or any later version published by the Free
Software Foundation; with no Invariant Sections, with no Front-Cover
Texts, and with no Back-Cover Texts. A copy of the license is
available at <A HREF="http://www.gnu.org/copyleft/fdl.html" TARGET="_top">http://www.gnu.org/copyleft/fdl.html</A>.
</P>
<H3 CLASS="western"><A NAME="disclaimer"></A>1.2 Disclaimer</H3>
<P CLASS="western">No liability for the contents of this document can
be accepted. Use the concepts, examples and information at your own
risk. There may be errors and inaccuracies which could damage to your
system. Though this is highly unlikely, proceed with caution. The
author(s) do not accept responsibility for your actions.</P>
<P CLASS="western">All copyrights are held by their respective
owners, unless specifically noted otherwise. Use of a term in this
document should not be regarded as affecting the validity of any
trademark or service mark. Naming of particular products or brands
should not be seen as endorsements.</P>
<H3 CLASS="western"><A NAME="credits"></A>1.3 Credits / Contributors</H3>
<P CLASS="western">Thanks to all those who frequent the <A HREF="https://lists.sourceforge.net/lists/listinfo/bacula-users">Bacula
User's e-mail list</A>, and of course to Kern Sibbald and the other
<A HREF="http://www.bacula.org/">Bacula</A> developers.</P>
<P CLASS="western">Bacula<SUB><FONT FACE="Times New Roman, serif">&reg;</FONT></SUB>
is a registered trademark of John Walker.</P>
<P CLASS="western">Windows<SUB><FONT FACE="Times New Roman, serif">&reg;</FONT></SUB>
<FONT FACE="Times New Roman, serif">is a registered trademark of
Microsoft Corporation in the United States and other countries.</FONT></P>
<H3 CLASS="western"><A NAME="feedback"></A>1.4 Feedback</H3>
<P CLASS="western">Send your additions, comments and criticisms to
&lt;jfisher at jaybus dot com&gt;</P>
<H3 CLASS="western"><A NAME="definitions"></A>2. Definitions</H3>
<P CLASS="western"><I>Bacula</I> is an open source network backup
solution. Much more information about Bacula is available at the
Bacula website <A HREF="http://www.bacula.org/">http://www.bacula.org</A>.</P>
<P CLASS="western">An <I>autochanger</I> is a backup storage device
consisting of one or more tape drives, a mechanical tape library
where a number of tapes are stored, and an individually addressable
robotic device capable of physically moving tapes between the tape
library and the tape drives.</P>
<P CLASS="western">A <I>virtual autochanger</I> emulates a tape
autochanger using disk storage, rather than tapes.</P>
<P CLASS="western">A <I>magazine</I> is a mechanical tape storage
device having a number of slots into which tapes are inserted. The
tape library of many autochangers consists of one or more removable
magazines, allowing several tapes at a time to be swapped into or out
of the tape library.</P>
<P CLASS="western">A <I>removable disk drive</I> is a random access
disk storage device that is external to, or easily removable from, a
computer system. Examples are external drive enclosures that connect
via USB, Firewire, eSATA, and hot swappable SCSI/SAS/SATA drive bays.</P>
<P CLASS="western">The term <I>hot swappable</I> refers to hardware
devices that may be attached to and removed from a running computer
system.</P>
<H1 CLASS="western"><A NAME="overview"></A>3. Overview</H1>
<P CLASS="western"><SPAN STYLE="font-style: normal">Bacula is already
very proficient at creating backup volumes on disk storage devices.
The <A HREF="http://www.bacula.org/en/rel-manual/Automated_Disk_Backup.html">Automated
Disk Storage</A></SPAN> <SPAN STYLE="font-style: normal">section of
the <A HREF="http://www.bacula.org/en/rel-manual/Bacula_Users_Guide.html">Bacula
User's Guide</A></SPAN> <SPAN STYLE="font-style: normal">describes
the use of disk storage with Bacula in great detail. Therefore, in
many cases, it is not necessary or useful to use disk-based
autochanger emulation. When storing backup volumes on fixed disk,
such as when using a disk-disk-tape backup method, it does not
usually make sense to add the extra complexity. Neither does it make
sense to use </SPAN><I>vchanger</I> <SPAN STYLE="font-style: normal">as
a way to utilize multiple fixed disk drives with a single Bacula
storage device resource. Although </SPAN><I>vchanger</I> <SPAN STYLE="font-style: normal">would
allow for this, a more robust and scalable solution may be to use LVM
to create a single large logical volume using those drives. In fact,
disk-based autochanger emulation only really makes sense when storing
backup volumes on removable disk drives that can be hot swapped.</SPAN></P>
<P CLASS="western" STYLE="font-style: normal">A virtual autochanger
emulates a traditional tape autochanger device, and so some
differences between tape autochangers and disk-based virtual
autochangers are given below.</P>
<TABLE WIDTH=664 BORDER=0 CELLPADDING=0 CELLSPACING=0>
	<COL WIDTH=103>
	<COL WIDTH=561>
	<TR VALIGN=TOP>
		<TD WIDTH=103>
			<P CLASS="col1-western">Volume</P>
		</TD>
		<TD WIDTH=561>
			<P CLASS="western">In a tape autochanger, a volume is a sequential
			region of data on a tape and usually refers to the entire tape. In
			a disk autochanger, a volume is a file on a disk file system.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=103>
			<P CLASS="col1-western">Slot</P>
		</TD>
		<TD WIDTH=561>
			<P CLASS="western">In a tape autochanger, a slot is the mechanical
			slot in the tape library, (usually in a magazine), in which a tape
			is held when not loaded into a tape drive. In a disk autochanger,
			a slot is an index number that maps to a particular volume file.</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=103>
			<P CLASS="col1-western">Magazine</P>
		</TD>
		<TD WIDTH=561>
			<P CLASS="western">In a tape autochanger, a magazine is a
			mechanical device containing a fixed number of slots that hold
			tapes not currently loaded into a tape drive. In a disk
			autochanger, a magazine is a directory containing a fixed number
			of volume files, each mapped to a virtual slot number. Generally,
			the directory is the mountpoint of a file system on a removable
			drive.</P>
		</TD>
	</TR>
</TABLE>
<H1 CLASS="western"><A NAME="implementation"></A>4. Virtual
Autochanger Implementation</H1>
<P CLASS="western"><SPAN STYLE="font-style: normal">vchanger
implements the <A HREF="http://www.bacula.org/en/rel-manual/Autochanger_Resource1.html#SECTION0032120000000000000000">Bacula
Autochanger Interface</A></SPAN> <SPAN STYLE="font-style: normal">API,
which defines the following commands:</SPAN></P>
<TABLE WIDTH=664 BORDER=0 CELLPADDING=0 CELLSPACING=0>
	<COL WIDTH=91>
	<COL WIDTH=573>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">list</P>
		</TD>
		<TD WIDTH=573>
			<P CLASS="western">Lists the barcodes of the volumes in each slot</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">load</P>
		</TD>
		<TD WIDTH=573>
			<P CLASS="western">Lists the barcodes of the volumes in each slot</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">unload</P>
		</TD>
		<TD WIDTH=573>
			<P CLASS="western">Unloads a volume from a drive and moves it back
			into a slot</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">slots</P>
		</TD>
		<TD WIDTH=573>
			<P CLASS="western">Returns the number of slots in the autochanger</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">loaded</P>
		</TD>
		<TD WIDTH=573>
			<P CLASS="western">Returns the one-based slot number that the
			volume currently loaded into a drive came from, or zero if the
			drive is empty</P>
		</TD>
	</TR>
</TABLE>
<P CLASS="western" STYLE="font-style: normal">vchanger also
implements an extended command that is not part of the Bacula
Autochanger Interface API:</P>
<TABLE WIDTH=492 BORDER=0 CELLPADDING=0 CELLSPACING=0 STYLE="page-break-before: auto; page-break-after: auto">
	<COL WIDTH=91>
	<COL WIDTH=401>
	<TR VALIGN=TOP>
		<TD WIDTH=91>
			<P CLASS="col1-western">initmag</P>
		</TD>
		<TD WIDTH=401>
			<P CLASS="western">Initialize a directory/mountpoint as a new
			magazine for a virtual autochanger</P>
		</TD>
	</TR>
</TABLE>
<P CLASS="western"><SPAN STYLE="font-style: normal">For autochanger
devices, the <A HREF="http://www.bacula.org/en/rel-manual/Storage_Daemon_Configuratio.html">Bacula
Storage Daemon</A></SPAN> <SPAN STYLE="font-style: normal">calls an
external autochanger script or program to performs functions such as
loading a tape into a drive, unloading a tape, etc. Bacula relies on
the autochanger script or program to handle the details of
manipulating the autochanger's robotic tape library mechanism.
Vchanger is one such program, and is invoked by the Bacula Storage
Daemon with 5 positional parameters defined as:</SPAN></P>
<TABLE WIDTH=664 BORDER=0 CELLPADDING=0 CELLSPACING=0>
	<COL WIDTH=97>
	<COL WIDTH=567>
	<TR VALIGN=TOP>
		<TD WIDTH=97>
			<P CLASS="col1-western">Param 1</P>
		</TD>
		<TD WIDTH=567>
			<P CLASS="western"><FONT FACE="Times New Roman, serif"><FONT SIZE=3><SPAN STYLE="font-style: normal">Path
			given by the </SPAN></FONT></FONT><FONT FACE="Times New Roman, serif"><FONT SIZE=3><I>Changer
			Device</I></FONT></FONT> <FONT FACE="Times New Roman, serif"><FONT SIZE=3><SPAN STYLE="font-style: normal">directive
			in the </SPAN></FONT></FONT><FONT FACE="Times New Roman, serif"><FONT SIZE=3><I>Autochanger</I></FONT></FONT>
			<FONT FACE="Times New Roman, serif"><FONT SIZE=3><SPAN STYLE="font-style: normal">resource.
			For vchanger, this should define the path to the <A HREF="#vchanger_config">autochanger
			configuration</A></SPAN></FONT></FONT> <FONT FACE="Times New Roman, serif"><FONT SIZE=3><SPAN STYLE="font-style: normal">file.</SPAN></FONT></FONT></P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=97>
			<P CLASS="col1-western">Param 2</P>
		</TD>
		<TD WIDTH=567>
			<P CLASS="western">API command to execute</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=97>
			<P CLASS="col1-western">Param 3</P>
		</TD>
		<TD WIDTH=567>
			<P CLASS="western">The one-based slot number the API command is to
			act upon</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=97>
			<P CLASS="col1-western">Param 4</P>
		</TD>
		<TD WIDTH=567>
			<P CLASS="western">Path given by the <I>Archive Device</I>
			directive of the <I>Device</I> resource corresponding to the drive
			given in parameter 5</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=97>
			<P CLASS="col1-western">Param 5</P>
		</TD>
		<TD WIDTH=567>
			<P CLASS="western">The zero-based drive number of the autochanger
			drive the command will act upon</P>
		</TD>
	</TR>
</TABLE>
<P CLASS="western">Vchanger requires a work directory for each
defined autochanger. Each autochanger is assigned a unique name
defined in its configuration file. By default, an autochanger's work
directory is created as a subdirectory of the Bacula work directory
with the same name as the autochanger. Since vchanger will be called
by the Bacula Storage Daemon, the autochanger's work directory must
have permissions set to allow read/write access for the user/group
that the Bacula Storage Daemon runs as.</P>
<P CLASS="western">An autochanger's work directory is where vchanger
will create symlinks to the mountpoints of removable drives that are
acting as magazines for the autochanger. The only state information
kept in the autochanger's work directory is contained in files named
'stateN', where N is the virtual drive number. The stateN files keep
track of the volume last loaded into drive N, and the absence of a
stateN file indicates that drive N is not loaded. Additionally, there
is a file named 'nextmag' that keeps track of the next available
magazine number, and is only used when initializing a new magazine
using the <I>initmag</I> extended command.</P>
<H3 CLASS="western"><A NAME="virtual_magazines"></A>4.1. Virtual
Magazines</H3>
<P CLASS="western">A virtual autochanger magazine is a directory, and
is usually the mountpoint for a file system on a removable disk
drive. The magazine directory contains a file named 'index', the
contents of which identify the magazine with a single text string of
the form 'changename_mmmm', where 'changername' is the name of the
virtual autochanger defined in the <A HREF="#vchanger_config">autochanger's
configuration file</A>, and 'mmmm' is the 4 digit one-based magazine
number assigned to the magazine when it was initialized. Every
magazine belonging to a particular autochanger must be assigned a
unique magazine number. The 'changername' part of the magazine index
identifies the magazine as belonging to a particular named
autochanger. This forces automatically generated volume barcodes to
be unique to each autochanger, allowing for the use of multiple
autochangers.</P>
<P CLASS="western">In addition to the index file, every magazine
contains a fixed number of volume files, each &ldquo;located&rdquo;
in a virtual magazine slot. The number of slots (and corresponding
volume files) per magazine is defined in the autochanger
configuration file, and every magazine initialized for a particular
autochanger has the same number of slots. Each volume file is named
using the form 'changername_mmmm_ssss', where 'changername' and
'mmmm' are the autochanger's name and the magazine number (as
described above), and 'ssss' is the one-based magazine slot number.</P>
<P CLASS="western">The volume filenames are also used as the
&ldquo;barcode&rdquo; labels for the volumes, emulating the barcode
reader functionality found in many tape autochangers. This allows
Bacula's <A HREF="http://www.bacula.org/en/rel-manual/Autochanger_Resource1.html#SECTION0032110000000000000000">barcode
support</A> to automate the labeling of the autochanger's volumes.</P>
<P CLASS="western">Bacula creates a backup volume on each of these
volume files in much the same way that it creates a backup volume on
a tape, including giving it a Bacula volume label and writing
sequential blocks of data following the volume label.</P>
<P CLASS="western">When using removable drives as magazines, it
should be noted that a <I>load</I> command will fail if the magazine
containing the slot Bacula wishes to be loaded is unavailable, as is
the case when a removable drive has been detached from the system or
its file system unmounted. As with a real (tape) autochangers, an
<I>update slots</I> command should be issued in the <A HREF="http://www.bacula.org/en/rel-manual/What_is_Bacula.html#SECTION00422000000000000000">Bacula
console</A> whenever a magazine is attached or detached so that
Bacula will know which slots contain available volumes and which do
not.</P>
<H3 CLASS="western"><A NAME="multi-magazine"></A>4.2. Multi-magazine
Autochangers</H3>
<P CLASS="western">It is possible to define an autochanger that can
use volume files on multiple attached magazines. This is useful if
the storage capacity of a single removable disk drive is not
sufficient or a backplane supporting multiple hot swap drives is to
be used. To define a multi-magazine autochanger, multiple <I>magazine</I>
directives are defined in the autochanger's configuration file. Each
<I>magazine</I> directive specifies a unique directory where a
magazine's file system is mounted. Specifying the same directory for
more than one magazine is not supported. The number of virtual slots
an autochanger has is the number of slots per magazine times the
number of magazine directories specified in the autochanger's
configuration file. The order in which the <I>magazine</I> directives
appear in the configuration file determines which autochanger slots
are mapped to which magazines. For example, if an autochanger's
configuration file defines 3 slots per magazine and 2 magazine
mountpoints, then the autochanger will have 6 slots. Autochanger
slots 1-3 will be slots 1-3 in the first magazine defined, and
autochanger slots 4-6 will be slots 1-3 in the second magazine
defined. Any of the 6 slots can be loaded into any of the
autochanger's virtual drives.</P>
<P CLASS="western">When using multi-magazine autochangers, it is
possible to have some magazines present and some missing. In this
case, a <I>load</I> from a slot mapped to the attached magazine would
succeed, but a <I>load</I> from a slot mapped to the detached
magazine would fail. Issuing an <I>update slots </I><SPAN STYLE="font-style: normal">command
whenever any magazine is attached or detached will allow Bacula to
know which slots contain available volumes and avoid this issue. It
is possible to run a multi-magazine autochanger without all of its
magazines as long as Bacula is kept informed of which slots contain
available volumes.</SPAN></P>
<H1 CLASS="western"><A NAME="install"></A>5. Installing vchanger</H1>
<P CLASS="western">On most POSIX systems, vchanger can be compiled
and installed from source as follows.</P>
<P CLASS="western">Unpack the gzip compressed tar archive.</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.2in">[]$ tar -xzf vcahnger-0.8.2.tar.gz</PRE><P CLASS="western" STYLE="margin-top: 0.08in">
Configure the build system and compile vchanger</P>
<PRE>[]$ cd vchanger
[]$ ./configure
[]$ make</PRE><P CLASS="western" STYLE="margin-top: 0.08in">
As root, install the executable and documentation</P>
<PRE>[]$ su root
[]# make install-strip</PRE><H3 CLASS="western">
<A NAME="bylabel"></A>5.1. Installing the &ldquo;by-label&rdquo; Fix</H3>
<P CLASS="western">On POSIX systems that support it, <A HREF="http://www.kernel.org/pub/linux/utils/kernel/hotplug/udev.html">udev</A>
can dynamically create symlinks to the device node assigned to a disk
drive when it is attached and remove the symlinks when it is
detached. Commonly, the volume label of a partition's file system is
used to create a symlink under /dev/disk/by-label that points to the
real device node assigned to the partition. However, it is also
commonly implemented such that when more than one partition has the
same file system volume label, the last partition attached overrides
the symlink udev created for a previously attached partition that
happened to have the same file system volume label. This presents a
problem for a multi-magazine autochanger, since an autochanger's
magazines all have the same file system label. 
</P>
<P CLASS="western">For Red Hat inspired Linux distributions, a fix
for this issue is included with the vchanger distribution, and
consists of a udev rules file and a simple shell script. The udev
rules file, 99-by-label-fix.rules, should be placed in
/etc/udev/rules.d. The script,by_label_fix.sh , should be placed in
/usr/local/sbin, owned by root, and its permissions set so that it is
executable. After these two files have been moved into place,
depending on the version of udev, issue:</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.08in">[]# udevadm control &ndash;-reload_rules
or
[]# udevcontrol reload_rules</PRE><P CLASS="western">
as root to cause udev to pull in the new rules. Note that the
included rules file and shell script have only been tested on
Centos5.2, Fedora 8, Fedora 9, and Fedora 10. This fix is certainly
possible on other systems utilizing udev, however the
99-by-label-fix.rules file may need to be tweaked.</P>
<P CLASS="western">With the by-label fix installed, whenever a disk
is attached, udev will create a symlink of the form
/dev/disk/by-label/label.N, where N is determined by invoking
/usr/local/sbin/by_label_fix.sh. The by_label_fix.sh script simply
determines the number of symlinks of the form
/dev/disk/by-label/label.N that already exist, and returns the first
available value of N. Note that the original symlink created by the
default udev rules, /dev/disk/by-label/label, is not affected by the
new rules. The 'label.N' symlinks are created in addition to the
default 'label' symlink.</P>
<P CLASS="western">The &ldquo;by-label&rdquo; fix is not installed by
default. It is only needed if a mult-magazine autochanger will be
defined. For a single magazine autochanger, where only a single
removable drive at a time is used, no changes to the udev rules
should be necessary.</P>
<H3 CLASS="western"><A NAME="install_win32"></A>5.2. Installing the
Windows Version of vchanger</H3>
<P CLASS="western">vchanger requires at least Windows XP or Windows
Server 2003 and will not run on earlier versions of Windows. A
Windows installer, win32_vchanger-x.x.x.exe, is included in the win32
directory of the source tar archive that will install a 32-bit x86
Windows version of vchanger.</P>
<P CLASS="western">The Windows version was developed under Windows XP
SP3 using <A HREF="http://www.eclipse.org/cdt/index.php">Eclipse CDT</A>
5.0 with the <A HREF="http://www.mingw.org/">MinGW</A> (gcc-3.4.5)
compiler and <A HREF="http://www.mingw.org/wiki/msys">MSYS</A>
utilities. The makefile and Eclipse CDT project files are included
with the source. A standard install of the Windows version of MinGW
and MSYS should include everything needed to build vchanger using the
makefile in the win32 directory. The Eclipse CDT is not required to
build.</P>
<P CLASS="western">It should be relatively easy to cross-compile a
win32 version using MinGW on a POSIX system. It may also be possible
with recent MinGW releases based on the gcc-4.3.x compiler to build a
64-bit x86_64 Windows version, but that has not been tried.</P>
<H1 CLASS="western"><A NAME="preparing"></A>6. Preparing Removable
Drives</H1>
<H3 CLASS="western"><A NAME="preparing_linux"></A>6.1. Preparing
Drives For Linux</H3>
<P CLASS="western">Preparing the removable drives for use on Linux is
fairly straight forward. All that is needed is a partition on the
removable drive with a file system that has a file system label named
such that udev will create the appropriate /dev/disk/by-label
symlink. Most removable drives come with a FAT32 file system
installed. FAT32 limits the maximum Bacula volume size that may be
used to 4 GB and does not provide for file level security. Any
appropriate filesystem supported by the OS may be used on the
magazine partitions. If using USB drives and relatively small volume
file sizes, then ext3 may be an appropriate file system, while for a
4 drive SATA drive bay with 4 TB of storage a XFS file system might
be more appropriate. For the examples in this howto, the ext3 file
system is used.</P>
<H3 CLASS="western"><A NAME="partition"></A>6.1.1. Partitioning the
Drive</H3>
<P CLASS="western">Since most removable drives come with a FAT32 file
system installed, the drive must be repartitioned in order to create
an ext3 file system. To partition a new drive we need to know the
device node that udev assigns to the drive. This can usually be
determined from the output of dmesg a few seconds after the drive is
attached. After determining the drive's device node, say for example
/dev/sdc, use fdisk /dev/sdc (or some other partitioning tool) to
create a single Linux partition as the drive's primary partition
number 1.</P>
<H3 CLASS="western"><A NAME="formatting"></A>6.1.2. Formatting /
Labeling the Partition file system</H3>
<P CLASS="western">Assuming the drive was assigned node /dev/sdc, the
partition can now be formatted and labeled using:</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.08in">mke2fs -j -b 4096 -T largefile -L &ldquo;c1&rdquo; /dev/sdc1</PRE><P CLASS="western">
This will create a new ext3 file system on the partition with a file
system volume label of 'c1'. Now unplug the drive, wait a few
seconds, then plug it back in. A few seconds after plugging it in you
should see that a symlink, /dev/disk/by-label/c1, was created and
points to whatever device node udev decided to assign to the
partition. If you installed the <A HREF="#bylabel">by-label fix</A>
explained above, then you should also see another symlink,
/dev/disk/by-label/c1.1, pointing to the same device node.</P>
<H3 CLASS="western"><A NAME="preparing_win32"></A>6.2. Preparing
Drives For Windows</H3>
<P CLASS="western">Preparing the removable drives for use with
Windows is simple. Since most removable drives come with a single
large partition having a FAT32 file system, they can usually be used
as shipped.</P>
<P CLASS="western">It is possible to use the NTFS file system with
removable drives. In fact, it is possible to use any file system for
which there is a read/write installable file system driver, (such as
the <A HREF="http://www.fs-driver.org/index.html">ext2 Installable
File System for Windows</A>). With NTFS, however, the default write
caching may lead to file system corruption if the volume is not
properly unmounted before detaching it, making it unsafe to simply
unplug a removable drive containing a NTFS file system. For example
purposes, the FAT32 file system will be used on Windows, despite its
4 GB file size limit</P>
<H1 CLASS="western"><A NAME="mounting"></A>7. Mounting Removable Disk
Drives</H1>
<P CLASS="western">On Linux and other modern *nix systems, removable
drives are assigned a device node when they are plugged in, but the
OS does not by default mount the drive partitions. Auto-mounting is
often handled by, for example, <A HREF="http://www.gnome.org/">Gnome</A>
<A HREF="http://www.gnome.org/projects/nautilus/index.html">Nautilus</A>,
but this will not suffice for use with daemons, such as the Bacula
Storage Daemon that will normally invoke vchanger. This section
describes a way to have the removable drives being used as
autochanger magazines mounted and unmounted automatically as needed.</P>
<H3 CLASS="western"><A NAME="udev"></A>7.1. udev and Hot-swappable
Drives</H3>
<P CLASS="western">Udev is the subsystem that dynamically assigns
device nodes to hot swappable hardware devices when they are attached
to a running system and frees those device nodes when they are
detached. There is no guarantee that a particular piece of hardware
will be assigned a known device node when it is plugged in. The
device node that udev assigns will depend on how many other devices
are already attached and could change every time the hot-swappable
device is plugged in.</P>
<P CLASS="western">Fortunately, udev provides a way to create aliases
to the device nodes it assigns so that the alias is always at a known
path. With most Linux distributions, aliases (symlinks) to hot
swappable disk storage devices are placed under /dev/disk. Generally,
udev is configured to use the file system volume label of a removable
disk drive partition to create a symlink under /dev/disk/by-label
that points to the real device node that udev assigned to the
partition. By labeling the file systems on the disk partitions that
will be used as our backup media, we then gain access to the
dynamically assigned device node via that symlink. For example, if we
have a partition on a removable hard drive with a file system that
has a file system volume label of 'c1', then when the removable drive
is plugged in, udev will assign a device node to that partition and
create the symlink /dev/disk/by-label/c1 pointing to the dynamically
assigned device node. All magazines to be used with a particular
autochanger are given the same file system volume label. This way an
autochanger's magazine is always assigned a predetermined symlink in
/dev/disk/by-label, and the real device node assigned by udev need
not be known.</P>
<P CLASS="western">If a multi-magazine autochanger will be defined,
then the by-label fix explained in section <A HREF="#bylabel">5.1</A>
is required. With the by-label fix installed, the (magazine)
partition on each removable drive will have its own unique symlink,
even though all of the magazines have the same file system volume
label. For multi-magazine autochangers, the alternate device symlinks
provided by the by-label fix must be used. As with single magazine
autochanger's, all of the autochanger's magazines are given the same
file system volume label. For example, if we have initialized N
magazines for an autochanger, each having a file system volume label
of 'c1', and the autochanger configuration specifies 2 magazine
mountpoints will be used, then any 2 of those N magazines may be
attached at any one time. The first one attached will be accessed via
the symlink /dev/disk/by-label/c1.1, and the second via
/dev/disk/by-label/c1.2.</P>
<H3 CLASS="western"><A NAME="autofs"></A>7.2. Using autofs To Mount
Removable Drive Partitions</H3>
<P CLASS="western">Udev provides the means to access device nodes for
the removable drive partitions, but we still must somehow get them
mounted so that Bacula can read and write volume files on them. There
are many ways to do this. In fact, Bacula itself provides support for
mounting hardware devices. The method described here, however, makes
use of <A HREF="http://www.autofs.org/">autofs</A> to automatically
mount and unmount removable drive partitions.</P>
<P CLASS="western">The <A HREF="http://www.autofs.org/">autofs</A>
daemon provides a way to mount and unmount the partitions on-the-fly
as they are accessed. The file systems of all magazines used with an
autochanger are given the same volume label, 'c1' in the examples we
have been using. Since we know a symlink to the device node for the
magazine will be at /dev/disk/by-label/c1, we can select a mount
point of /mnt/c1/1 and create a file named /etc/auto.vchanger as
follows:</P>
<PRE># /etc/auto.c1
1          -fstype=auto,sync,rw       :/dev/disk/by-label/c1
# eof</PRE><P CLASS="western">
Notice that 'sync' is specified in the flags that will be passed to
the mount command. This will turn off write caching and force all
writes to the magazine file system to be written immediately to disk.
Though it reduces write performance, it helps to reduce the chance of
data loss when a removable drive is detached following a backup. Much
better write performance can be had by not specifying the sync option
and being careful when unplugging removable drives.</P>
<P CLASS="western">For a multi-magazine autochanger, the device
symlinks are /dev/disk/by-label/c1.1, /dev/disk/by-label/c1.2, ... ,
/dev/disk/by-label/c1.N. A more appropriate auto.vchanger file would
be:</P>
<PRE># /etc/auto.c1
*         -fstype=auto,sync,rw        :/dev/disk/by-label/c1.&amp;
# eof</PRE><P CLASS="western">
We then add a line to the /etc/auto.master file to tell autofs to
pull in the new auto.c1 configuration:</P>
<PRE># /etc/auto.master
# ...
/mnt/c1      /etc/auto.c1        --timeout=10
# eof</PRE><P CLASS="western">
Now restart the autofs daemon and whenever a drive that has a
partition with a file system volume label of 'c1' is plugged in,
/mnt/c1/1 can be accessed without any need for an explicit mount
command. Autofs will automatically mount /dev/disk/by-label/c1 at
/mnt/c1/1 whenever the /mnt/c1/1 driectory or its files or
subdirectories are accessed, and it will automatically unmount the
magazine partition after a 10 second period of inactivity. Similarly,
for a multi-magazine autochanger, the /dev/disk/by-label/c1.1
partition will be auto-mounted at /mnt/c1/1, the
/dev/disk/by-label/c1.2 partition at /mnt/c1/2, etc.</P>
<H3 CLASS="western"><A NAME="mounting_win32"></A>7.3. Mounting
Removable Drives On Windows</H3>
<P CLASS="western">Microsoft Windows operating systems normally
auto-mount removable drive partitions with recognized file systems.
By default, the mount point for a partition will be a drive letter
(ie. E:). Unlike *nix operating systems, where '/' is the root of the
single directory tree, Windows operating systems use a multi-root
directory structure where drive letters (and network UNC base names)
represent the roots of multiple distinct directory trees. When a
removable drive is plugged in for the first time, assuming the drive
has a single partition, its partition will be mounted at the next
available drive letter. Windows remembers the drive letter assignment
for a partition so that it will be mounted at the same drive letter
when it is later re-attached, unless the drive letter is already
being used for another partition, in which case it will be mounted at
the next available drive letter.</P>
<P CLASS="western">It is also possible, however, to mount a volume at
a (empty) subdirectory in another directory tree, as long as the
volume mounted at the root of that other directory tree is a NTFS
volume. In fact, only the volume from which Windows boots and volumes
containing a virtual memory storage file even require a drive letter
at all. For removable drives, the drive letter assignment can be
deleted altogether and the partition always auto-mounted at a
directory in an NTFS directory tree. It should be noted that only the
mount point directory must be on an NTFS volume. The partition being
mounted may have a FAT32 file system or any other file system for
which there is a file system driver installed. Also note that
multiple removable drives can be assigned the same drive letter.
However, only one drive at a time can actually be mounted at that
drive letter. Please see &ldquo;<A HREF="http://support.microsoft.com/kb/307889">How
to create and use NTFS mounted drives in Windows XP and in Windows
Server 2003</A>&rdquo; for instructions on assigning mount points for
removable drive partitions.</P>
<P CLASS="western">Mounting magazines for a single magazine
autochanger works well, but using a multi-magazine autochanger under
Windows is not as simple. Windows does not provide a means to assign
multiple drives to the same NTFS mountpoint. It is possible to assign
multiple drives to the same drive letter, though only if they are
never attached at the same time. If two of those drives are attached
at the same time, only the first one attached can receive that drive
letter assignment. A subsequently attached drive will be assigned the
first available drive letter if its preassigned drive letter is
already being used, and there doesn't appear to be a way to define
the set of drive letters a particular drive may be assigned.</P>
<P CLASS="western">It is still possible to use a multi-magazine
autochanger on Windows, but it is not nearly as plug-n-play as when
running on Linux with udev and autofs. The best approach seems to be
to define the magazine mountpoints as drive letters in the
autochanger configuration file, then manually change a magazine's
drive letter assignment in Disk Manager after it is attached so that
it matches one of the <I>magazine</I> directives defined in the
autochanger configuration file. This is not very convenient, but it
does work.</P>
<H1 CLASS="western"><A NAME="vchanger_config"></A>8. Configuring
vchanger</H1>
<P CLASS="western">Each vchanger autochanger is defined by a
configuration file. Multiple autochangers may be defined as long as
each is given a unique name and its own unique configuration file. By
default, vchanger configuration files are placed in the Bacula
configuration directory (/etc/bacula). The configuration files must
be given permissions that allow read access for the user the Bacula
Storage Daemon runs as.</P>
<P CLASS="western" STYLE="font-style: normal">A vchanger
configuration file consists of keyword = value pairs. Comments are
defined by a '#' character, and cause text from the '#' until the
next newline character to be ignored. Values including whitespace or
special characters must be enclosed in single or double quotes.
Special characters, including the quote character, appearing inside
of the quoted value must be escaped by prepending with a '\'
character. The following keywords are defined for an autochanger
configuration file:</P>
<TABLE WIDTH=664 BORDER=0 CELLPADDING=0 CELLSPACING=0>
	<COL WIDTH=172>
	<COL WIDTH=492>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">changer_name</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">[Required] The name of the autochanger. This
			will name a subdirectory of the Bacula work directory that will be
			used as the autochanger's work directory. This name will also be
			prepended to all volume barcode labels for this autochanger.
			<BR>Default: none</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">state_dir</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">The directory where virtual drive state
			information and symlinks will be created. <BR>Default:
			/var/lib/bacula/&lt;changer_name&gt;</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">logfile</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">The path to a file where vchanger will write
			log and debug messages. This file must be writable by the user the
			Bacula Storage Daemon runs as.<BR>Default: none (logging disabled)</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">slots_per_magazine</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">The fixed number of slots in each
			magazine<BR>Default: 10</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">virtual_drives</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">The number of virtual drives to use. Multiple
			virtual drives allow Bacula to concurrently access multiple
			volumes. The number of virtual drives to use must be less than or
			equal to the <I>slots_per_magazine</I> <SPAN STYLE="font-style: normal">value</SPAN>.<BR>Default:
			1</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=172>
			<P CLASS="col1-western">magazine</P>
		</TD>
		<TD WIDTH=492>
			<P CLASS="western">[Required] Defines the path to a directory or
			mountpoint to be used as a magazine. This directive may appear
			multiple times to define multiple magazines to emulate a
			multi-magazine autochanger.<BR>Default: none</P>
		</TD>
	</TR>
</TABLE>
<P CLASS="western" STYLE="margin-left: 0in; margin-top: 0in; margin-bottom: 0in">
<BR>
</P>
<H1 CLASS="western"><A NAME="initialize"></A>9. Initializing New
Magazines</H1>
<P CLASS="western">After a removable drive has been <A HREF="#preparing">prepared</A>,
it must be initialized for use with vchanger. Initializing consists
of creating a file named 'index' and a volume file for each magazine
slot. The index file contains a single text string of the form
&ldquo;changername_mmmm&rdquo;, where 'changername' is the name of
the autochanger the magazine will be used with, and 'mmmm' is the
4-digit one-based magazine number assigned to the magazine. All
magazines used with an autochanger must have a unique magazine number
to prevent vchanger from attempting to create duplicate volume
barcodes. An empty volume file is created for each of the magazine's
slots. The number of slots in each magazine is determined by the
<I>slots_per_magazine</I> directive in the autochanger configuration
file. The volume files are named &ldquo;changername_mmmm_ssss&rdquo;,
where 'changername' and 'mmmm' are the autochanger name and unique
magazine number, (as described above), and 'ssss' is the 4-digit
one-based slot number of the magazine slot where the volume is
&ldquo;located&rdquo;.</P>
<P CLASS="western">vchanger implements an extended command, initmag,
that makes initializing new magazines easier. The following
initializes a new magazine for an autochanger with configuration file
/etc/bacula/c1.conf:</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.08in">[]# vchanger -u bacula -g disk /etc/bacula/c1.conf initmag 1</PRE><P CLASS="western">
This will assign the next available magazine number to the first
magazine specified in the configuration file /etc/bacula/c1.conf. A
file named 'nextmag' in the autochanger's work directory keeps track
of the next available magazine number for an autochanger.</P>
<P CLASS="western">The initmag command optionally accepts the -m flag
to manually specify the magazine number to assign to the magazine.
The -m flag is useful for replacing a defective removable drive and
assigning the replacement the same magazine number. It should be used
with caution, however, to prevent magazines from having duplicate
magazine numbers.</P>
<P CLASS="western">Note that when vchanger is invoked by the root
user, the -u flag and -g flag are used to specify the user and group
that should own the magazine's files. Since vchanger will normally be
invoked by the Bacula Storage Daemon, the magazine and its files must
be writable by the user/group the Storage Daemon runs as.</P>
<H1 CLASS="western"><A NAME="testing"></A>10. Testing vchanger</H1>
<P CLASS="western">vchanger may be tested by running it from the
command line as the user that bacula-sd runs as. For example
purposes, we will use the following autochanger configuration file:</P>
<PRE># /etc/bacula/c1.conf
changer_name = c1
slots_per_magazine = 3
virtual_drives = 2
magazine = /mnt/c1/1
#eof</PRE><P CLASS="western">
This defines a single magazine autochanger using 3 slots per
magazine. Make sure no removable drives are attached, then assuming
the magazine files are owned by user bacula, issue (as root):</P>
<PRE>[]# vchanger -u bacula -g disk /etc/bacula/c1.conf list
1:
2:
3:</PRE><P CLASS="western">
The above command should list the 3 slots without any barcode labels,
because no magazine is mounted. Attaching an initialized magazine,
then re-issuing the list command should look like:</P>
<PRE>[]# vchanger -u bacula -g disk /etc/bacula/c1.conf list
1:c1_0001_0001
2:c1_0001_0002
3:c1_0001_0003</PRE><P CLASS="western">
Now try to load slot 2 into virtual drive 0 with:</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.2in">[]# vchanger -u bacula -g disk /etc/bacula/c1.conf load 2 \ /var/lib/bacula/c1/0/drive0 0</PRE><P CLASS="western">
This command should succeed and the state_dir directory should be:</P>
<PRE>[]# ls -1 /var/lib/bacula/c1
0
nextmag
state0

[]# ls -1 /var/lib/bacula/c1/0
c1_0001_0001
c1_0001_0003
drive0
index
loaded0

[]# cat /var/lib/bacula/c1/0/loaded0
c1_0001_0002

[]# cat /var/lib/bacula/c1/state0
c1_0001_0002</PRE><P CLASS="western">
The symlink /var/lib/bacula/c1/0 pointing to /mnt/c1/1 should have
been created, file /mnt/c1/1/c1_0001_0002 should have been renamed to
/mnt/c1/1/drive0, file /mnt/c1/1/loaded0 should have been created,
and file /var/lib/bacula/c1/state0 should have been created.</P>
<P CLASS="western">Now load drive 1 from slot 3.</P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.2in">[]# vchanger -u bacula -g disk /etc/bacula/c1.conf load 3 \ /var/lib/bacula/c1/1/drive1 1</PRE><P CLASS="western">
and the state_dir directory should look like:</P>
<PRE>[]# ls -1 /var/lib/bacula/c1
0
1
nextmag
state0
state1

[]# ls -1 /var/lib/bacula/c1/0
c1_0001_0001
drive0
drive1
index
loaded0
loaded1

[]# ls -1 /var/lib/bacula/c1/1
c1_0001_0001
drive0
drive1
index
loaded0
loaded1

[]# cat /var/lib/bacula/c1/state0
c1_0001_0002

[]# cat /var/lib/bacula/c1/0/loaded0
c1_0001_0002

[]# cat /var/lib/bacula/c1/state1
c1_0001_0003

[]# cat /var/lib/bacula/c1/1/loaded1
c1_0001_0003</PRE><P CLASS="western">
Notice that the symlink for drive 0 points to the same magazine
mountpoint as the symlink for drive 1. This will always be the case
for a single magazine autochanger, since there is only one magazine
mounted at any one time. However this may or may not be the case for
a multi-magazine autochanger. The virtual drive's symlink points to
the mountpoint of the magazine that contains the volume file.</P>
<P CLASS="western">Now use the unload command to unload virtual
drive0.</P>
<PRE>[]# vchanger -u bacula -g disk /etc/bacula/c1.conf unload 2 \
/var/lib/bacula/c1/0/drive0 0

[]# ls -1 /var/lib/bacula/c1
1
nextmag
state0

[]# ls -1 /var/lib/bacula/c1/1
c1_0001_0001
c1_0001_0002
drive1
index
loaded1</PRE><P CLASS="western">
Virtual drive 0 has been unloaded by renaming the file drive0 back to
c1_0001_0002, deleting the loaded0 file from the magazine, deleting
the state0 file from the vchanger work directory, and deleting the
virtual drive's symlink, /var/lib/bacula/c1/0. A drive's symlink only
exists when the drive is loaded and is deleted when the drive is
unloaded.</P>
<H1 CLASS="western"><A NAME="configuring_bacula"></A>11. Configuring
Bacula To Use The Autochanger</H1>
<P CLASS="western">The virtual autochanger must be defined in Bacula
by adding <I>Autochanger</I> and <I>Device</I> resources to Bacula's
configuration files. 
</P>
<H3 CLASS="western"><A NAME="sd_config"></A>11.1 Configuring the
Bacula Storage Daemon</H3>
<P CLASS="western">To configure the Bacula storage daemon
(bacula-sd), add an <I>Autochanger</I> resource and associated <I>Device</I>
resource(es) to bacula-sd.conf. An example of an autochanger with 2
virtual drives is:</P>
<PRE># /etc/bacula/bacula-sd.conf
# ...
#----  local virtual autochanger with USB drive &quot;magazines&quot;
Autochanger {
  Name = usb-changer
  Device = usb-changer-drive-0
  Device = usb-changer-drive-1
  Changer Command = &quot;/usr/local/bin/vchanger %c %o %S %a %d&quot;
  Changer Device = &quot;/etc/bacula/c1.conf&quot;
}
#---  drive 0 of the usb-changer autochanger
Device {
  Name = usb-changer-drive-0
  DriveIndex = 0
  Autochanger = yes;
  DeviceType = File
  MediaType = File
  ArchiveDevice = /var/bacula/c1/0/drive0
  RemovableMedia = no;
  RandomAccess = yes;
}
#---  drive 1 of the usb-changer autochanger
Device {
  Name = usb-changer-drive-1
  DriveIndex = 1
  Autochanger = yes;
  DeviceType = File
  MediaType = File
  ArchiveDevice = /var/bacula/c1/1/drive1
  RemovableMedia = no;
  RandomAccess = yes;
}# ...
# eof</PRE><P CLASS="western">
In the <I>Autochanger</I> resource, the <I>Changer Device</I> value
is the path to the vchanger configuration file for this autochanger.
The <I>Changer Command</I> value is the command Bacula will execute
when it needs the autochanger to perform some function, (like loading
a volume). Here, we have installed vchanger in /usr/local/bin, and
bacula is going to pass the <I>Changer Device</I> value in parameter
1, the API command (load, unload, etc) in parameter 2, the slot
number for the command in parameter 3, the <I>Archive Device</I>
value from the <I>Device</I> resource that has a <I>Drive Index</I>
value equal to the drive index for the command in parameter 4, and
the drive index for the command in parameter 5.</P>
<P CLASS="western">In the <I>Device</I> resource, it is important to
set <I>Device Type</I> = File so that Bacula understands it is
reading/writing a <I>File Storage</I> type volume. The <I>ArchiveDevice</I>
value is the path of the file that Bacula will use as a backup
volume. Notice that this path is the driveN file under the symlink
directory for drive index N.</P>
<H3 CLASS="western"><A NAME="dir_config"></A>11.2 Configuring the
Bacula Director</H3>
<P CLASS="western">The Bacula Director is configured to use the
virtual autochanger as it would be configured for a traditional tape
autochanger.</P>
<PRE># /etc/bacula/bacula-dir.conf
# ...
# Local USB drive virtual autochanger
Storage {
  Name = c1   # same as 'changer_name' in the vchanger config file
  Address = sd-server-address
  Password = &quot;secret_password&quot;
  Device = usb-changer  # name of the Autochanger resource in bacula-sd.conf
  Media Type = File
  Autochanger = yes;
}
# eof</PRE><H1 CLASS="western">
<A NAME="using"></A>12. Using The Autochanger</H1>
<P CLASS="western">After reloading/restarting the Bacula Storage
Daemon and Director to load the new configuration, the Storage device
'c1', (the virtual autochanger that has been created in the examples
above), is ready to use.</P>
<H3 CLASS="western"><A NAME="labeling_volumes"></A>12.1. Labeling
Volumes In New Magazines</H3>
<P CLASS="western">New magazines, such as those created in <A HREF="#initialize">9</A>
above, will have empty volume files. Before these files can be used
as Bacula volumes, Bacula must write a volume label on them. The
easiest way to accomplish this is to use the <I>label barcodes</I>
command from within the Bacula console. Bacula will invoke vchanger
with the <I>list</I> command to extract the barcodes for the volumes
in each autochanger slot, then invoke vchanger with the <I>load</I>
command once for each slot to load the volumes in those slots one at
a time into a virtual drive and write a Bacula volume label to the
volume file using the corresponding barcode to name the volume. The
Bacula volume, barcode, and volume file will all have the same name.</P>
<P CLASS="western">The <I>label barcodes</I> console command should
always be used to label autochanger volumes. The automatic generation
of barcode labels and naming of the volume files that vchanger uses
requires the use of specific volume names. It is possible to use the
<I>label</I> command in the Bacula console to label a volume, but if
a name other than the barcode assigned by vchanger is used it will
cause problems. 
</P>
<H3 CLASS="western"><A NAME="insert_mag"></A>12.2. Inserting
Magazines</H3>
<P CLASS="western">To insert a magazine into an autochanger, simply
attach the removable drive containing the magazine to be inserted,
then issue the <I>update slots</I> command in the Bacula console to
keep Bacula informed of the currently available volumes.</P>
<H3 CLASS="western"><A NAME="eject_mag"></A>12.3. Ejecting Magazines</H3>
<P CLASS="western">To eject a magazine, first check the status of the
director by issuing the <I>status dir</I> in the Bacula console to
make sure no running jobs are currently using one of the
autochanger's volumes. Then simply detach the removable drive.</P>
<P CLASS="western">After detaching the removable drive, issue the
<I>update slots</I> command in the Bacula console to keep Bacula
informed of which autochanger slots contain available volumes.
Otherwise, Bacula may attempt to load a volume that is not currently
available, which will result in vchanger returning an error to Bacula
that will cause the job to fail. If you will be immediately be
inserting another magazine to replace the one being ejected, then it
is only necessary to issue the <I>update slots</I> command once after
the replacement magazine is inserted.</P>
<H3 CLASS="western"><A NAME="magazine_change"></A>12.4. Changing
Magazines</H3>
<P CLASS="western">When Bacula requests a volume not on a magazine
that is currently attached, it will be necessary to &ldquo;insert&rdquo;
the magazine containing the requested volume into the autochanger.
Which magazine to insert will be easily discovered from the volume
label name that is being asked for. If the number of magazines
already inserted, (ie. removable drives already attached), is equal
to the number of magazine mountpoints defined for the autochanger,
then one of the already inserted magazines must be ejected before
another can be inserted. As always, after inserting the magazine,
issue the <I>update slots</I> command in the Bacula console.</P>
<H1 CLASS="western"><A NAME="examples"></A>13. Autochanger Example
Configurations</H1>
<P CLASS="western">The below examples assume the use of 250 GB hard
drives and a maximum volume file size of 4,000,000,000 bytes. A
smaller number of volume files could be used by increasing the
maximum volume size, but the maximum volume size must not exceed the
maximum file size allowed by the file system being used.</P>
<H3 CLASS="western"><A NAME="example_single"></A>13.1.
Single-magazine Single-drive Autochanger</H3>
<P CLASS="western">This configuration is an example of using USB
external drives as magazines. Only a single USB drive is attached at
any one time. A single virtual drive means that only one volume file
at a time can be read/written. When a magazine is initialized, its
volumes are placed in the Scratch pool. Bacula will move volumes from
the Scratch pool into the full or incremental pools when they are
needed. When the volumes are purged, they will be moved back into the
Scratch pool.</P>
<PRE># /etc/bacula/bacula-sd.conf
# ...
#----  virtual autochanger using USB external drives
Autochanger {
  Name = usb-changer
  Device = usb-changer-drive-0
  Changer Command = &quot;/usr/local/bin/vchanger %c %o %S %a %d&quot;
  Changer Device = &quot;/etc/bacula/c1.conf&quot;
}
#---  drive 0 of the usb-changer autochanger
Device {
  Name = usb-changer-drive-0
  DriveIndex = 0
  Autochanger = yes;
  DeviceType = File
  MediaType = File
  ArchiveDevice = /var/bacula/c1/0/drive0
  RemovableMedia = no;
  RandomAccess = yes;
}
# ...
#eof

# /etc/bacula/bacula-dir.conf
# ...
# Local USB drive virtual autochanger
Storage {
  Name = c1
  Address = sd-server-address
  Password = &quot;secret_password&quot;
  Device = usb-changer
  Media Type = File
  Autochanger = yes;
}
Pool {
  Name = full
  Pool Type = backup
  Storage = c1
  Maximum Volume Bytes = 4gb
  Recycle Pool = Scratch
}
Pool {
  Name = inremental
  Pool Type = backup
  Storage = c1
  Maximum Volume Bytes = 4gb
  Recycle Pool = Scratch
}
Pool {
  Name = Scratch
  Pool Type = backup
}
#...
# eof

# /etc/bacula/c1.conf
# Configuration for vchanger autochanger c1
changer_name = c1
slots_per_magazine = 62
magazine = /mnt/c1/1
#eof</PRE><H3 CLASS="western">
<A NAME="example_multi"></A>13.2. Multi-magazine Multi-drive
Autochanger</H3>
<P CLASS="western">In this example, a SATA backplane with 4 hot swap
drive bays is being used as a multi-magazine autochanger. The
autochanger will have 248 slots, 62 slots per attached 250 GB SATA
drive with a maximum volume size of 8 GB. Some clients will be backed
up to pool 'group-A' and some will be backed up to pool 'group-B', so
two virtual drives are defined allowing a group-A client and a
group-B client to be backed up concurrently.</P>
<PRE># /etc/bacula/bacula-sd.conf
# ...
#----  virtual autochanger using 4 drive SATA backplane
Autochanger {
  Name = sata-changer
  Device = sata-changer-drive-0
  Device = sata-changer-drive-1
  Changer Command = &quot;/usr/local/bin/vchanger %c %o %S %a %d&quot;
  Changer Device = &quot;/etc/bacula/c2.conf&quot;
}
#---  drive 0 of the sata-changer autochanger
Device {
  Name = sata-changer-drive-0
  DriveIndex = 0
  Autochanger = yes;
  DeviceType = File
  MediaType = File
  ArchiveDevice = /var/bacula/c2/0/drive0
  RemovableMedia = no;
  RandomAccess = yes;
}
#---  drive 1 of the sata-changer autochanger
Device {
  Name = sata-changer-drive-1
  DriveIndex = 1
  Autochanger = yes;
  DeviceType = File
  MediaType = File
  ArchiveDevice = /var/bacula/c2/1/drive1
  RemovableMedia = no;
  RandomAccess = yes;
}# ...



# /etc/bacula/c2.conf
# Configuration for vchanger autochanger c2
changer_name = c2
slots_per_magazine = 62
virtual_drives = 2
magazine = /mnt/c1/1
magazine = /mnt/c1/2
magazine = /mnt/c1/3
magazine = /mnt/c1/4
#eof</PRE><H3 CLASS="western">
<A NAME="example_win32"></A>13.3. Windows Autochangers</H3>
<P CLASS="western">Configuring an autochanger for the Windows version
of vchanger is nearly identical to the Linux example configurations
given above. The only difference is in specifying the path argument
of magazine directives. The path to a removable drive's mountpoint
may be a NTFS mountpoint, but will often be a drive letter. In the
below example autochanger configuration file, the magazine (removable
drive) mountpoint is specified as a drive letter. Each drive to be
used as a magazine will need to be assigned that drive letter in Disk
Manager.</P>
<PRE># C:\Documents and Settings\All Users\Application Data\Bacula\vchanger.conf
# Configuration for win32 autochanger &ldquo;changer1&rdquo;
changer_name = changer1
slots_per_magazine = 62
virtual_drives = 1
magazine = &ldquo;V:\&rdquo;
#eof</PRE><P CLASS="western">
Note the backslash '\' after the drive letter in the magazine line.
The trailing backslash identifies the filesystem on the partition,
where as without the trailing backslash Windows assumes the raw
partition is being referenced.</P>
<H1 CLASS="western">Appendix A. vchanger Commands</H1>
<H3 CLASS="western">A.1. list Command</H3>
<P CLASS="western" STYLE="margin-top: 0in; margin-bottom: 0in; font-style: normal">
Bacula issues this command to an autochanger script to list to stdout
the &ldquo;barcode labels&rdquo; of volumes in the autochanger's
slots. Many real (tape) autochangers have barcode readers such that
tapes can be given a physical barcode label that identifies the tape.
This allows Bacula to automate the process of creating volume labels.
Vchanger emulates barcodes for the volumes in a virtual autochanger's
slots by listing the volume filenames of mounted magazines. The empty
string is listed for each slot of an unmounted magazine, which
informs Bacula that the slot is empty.</P>
<H3 CLASS="western">A.2. slots Command</H3>
<P CLASS="western" STYLE="margin-top: 0in; margin-bottom: 0in; font-style: normal">
This command simply prints to stdout the total number of slots.
Bacula issues this command to determine how many slots an autochanger
has.</P>
<H3 CLASS="western">A.3. load Command</H3>
<P CLASS="western" STYLE="font-style: normal">The load command is
used to &ldquo;load&rdquo; a volume from a slot into a virtual drive.
A real autochanger does this by physically moving a tape from a
magazine slot and inserting it into a tape drive. Bacula defines an
autochanger as having multiple device nodes, one for the robotic
changer mechanism that shuffles tapes between tape library slots and
a tape drive, and one device for each tape drive the autochanger has.
Bacula relies on an external autochanger script or program, such as
vchanger, to manipulate the robotic changer mechanism into loading
the requested tape into a selected tape drive. Bacula then reads and
writes volumes using the selected tape drive. For a vchanger
autochanger, the device used for reading and writing volumes is a
regular file, rather than the device node of a tape drive. The file
for drive N is named 'symlink/driveN', where 'symlink' is symlink in
the autochanger work directory that points to the magazine mountpoint
containing the requested volume. The volume is then &ldquo;loaded&rdquo;
into the virtual drive by renaming the volume file to driveN and
saving the slot number that is currently loaded into drive N into a
file named loadedN.</P>
<P CLASS="western" STYLE="font-style: normal">Parameter 3 gives the
autochanger slot number of the volume to load, parameter 4 gives the
path to the driveN file that Bacula will read/write, and parameter 5
gives the drive number of the virtual drive the volume is to be
loaded into. After checking that the drive given by parameter 5 is
not already loaded and the slot given by parameter 3 is not already
loaded into another drive, vchanger determines the magazine that
contains the slot and creates, (in the autochanger's work directory),
a symlink to that magazine's mountpoint. The symlink is given a
numerical name equal to the virtual drive number. For example, assume
slot 4 is located on the first magazine, the first magazine is
defined to have a mountpoint of '/mnt/c1/1', and the autochanger work
directory is at /var/lib/bacula/c1. Then a load from slot 4 into
drive 0 would create symlink '/var/lib/bacula/c1/0' pointing to
/mnt/c1/1, rename volume file /var/lib/bacula/c1/0/c1_0001_0004 to
/var/lib/bacula/c1/0/drive0, and write the value &ldquo;c1_0001_0004&rdquo;
to the file /var/lib/bacula/c1/0/loaded0 and also to the file
/var/lib/bacula/c1/state0.</P>
<H3 CLASS="western">A.4. unload Command</H3>
<P CLASS="western" STYLE="font-style: normal">When drive N is loaded,
the magazine directory containing the slot loaded into drive N will
contain a file named driveN, (the renamed volume file), and loadedN.
The contents of the loadedN file specify which of the magazine's
slots is loaded into drive N. Together with the contents of the
magazine's index file, the original volume filename can be
determined. To unload the drive, vchanger renames the driveN file
back to its original volume filename and deletes the loadedN file.
Additionally, the symlink and state file for the virtual drive are
deleted from the vchanger work directory.</P>
<H3 CLASS="western"><B>A.5. loaded Command</B></H3>
<P CLASS="western" STYLE="font-weight: medium">This command is issued
to determine which slot, if any, is loaded into a drive. If a drive
is loaded and the magazine is still mounted, then the loadedN file
contains the magazine slot currently loaded into drive N. To return
the virtual slot number loaded into virtual drive N back to Bacula,
the autochanger's slot number is calculated from the magazine slot
number and written to stdout. If the drive is not loaded, the string
&ldquo;0&rdquo; is written to stdout to inform Bacula that the drive
is not loaded.</P>
<H3 CLASS="western"><B>A.6. initmag Command</B></H3>
<P CLASS="western"><SPAN STYLE="font-weight: medium">This is an
extended command that is not part of the <A HREF="http://www.bacula.org/en/rel-manual/Autochanger_Resource1.html#SECTION0032120000000000000000">Bacula
Autochanger Interface</A></SPAN> <SPAN STYLE="font-weight: medium">API,
and is used to initialize one of the magazines defined in the
autochanger configuration file. The format of this command is</SPAN></P>
<PRE STYLE="margin-top: 0.01in; margin-bottom: 0.2in">vchanger -u sd_user -g sd_group config_file initmag mag_index [-m mag_number]</PRE><P CLASS="western" STYLE="margin-top: 0.08in">
where:</P>
<TABLE WIDTH=664 BORDER=0 CELLPADDING=0 CELLSPACING=0>
	<COL WIDTH=131>
	<COL WIDTH=533>
	<TR VALIGN=TOP>
		<TD WIDTH=131>
			<P CLASS="col1-western">sd_user</P>
		</TD>
		<TD WIDTH=533>
			<P CLASS="western">The user Bacula Storage Daemon runs as</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=131>
			<P CLASS="col1-western">sd_group</P>
		</TD>
		<TD WIDTH=533>
			<P CLASS="western">The group Bacula Storage Daemon runs as</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=131>
			<P CLASS="col1-western">config_file</P>
		</TD>
		<TD WIDTH=533>
			<P CLASS="western">Path to the autochanger configuration file</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=131>
			<P CLASS="col1-western">mag_index</P>
		</TD>
		<TD WIDTH=533>
			<P CLASS="western">Positive integer magazine index, where 1
			corresponds to the first magazine specified in the configuration
			file, 2 to the second magazine specified, etc. 
			</P>
		</TD>
	</TR>
	<TR VALIGN=TOP>
		<TD WIDTH=131>
			<P CLASS="col1-western">mag_number</P>
		</TD>
		<TD WIDTH=533>
			<P CLASS="western">Optionally specifies the magazine number to be
			assigned</P>
		</TD>
	</TR>
</TABLE>
<P CLASS="western" STYLE="margin-top: 0.08in">The magazine's index
file is created with the contents being a string of the form
&ldquo;name_mmmm&rdquo;, where 'name' is the name given by the
<I>changer_name</I> directive in the configuration file, and 'mmmm'
is the 4 digit magazine number assigned to the new magazine. If the
magazine number is not manually specified on the command line with
the -m flag, then the next available magazine number is assigned. A
file named 'nextmag' in the autochanger's work directory is used by
the <I>initmag</I> command to store the next available magazine
number for the autochanger.</P>
<P CLASS="western" STYLE="margin-top: 0.08in">The optional -m flag is
used to manually assign a particular magazine number to a new
magazine. It is provided to make it easier to replace a defective
removable disk drive, allowing a replacement to be assigned the same
magazine number as the failed disk drive. It should be used with
care, as it is important that all magazines for a particular
autochanger have unique magazine numbers in order to prevent
duplicate volume filenames.</P>
<P CLASS="western" STYLE="margin-top: 0.08in">Along with the index
file, empty volume files are created for each of the magazine's
slots. Note that these empty files cannot be used as backup volumes
until after a Bacula volume label has been written to them using the
<I>label</I> or <I>label barcodes</I> command in the <A HREF="http://www.bacula.org/en/rel-manual/What_is_Bacula.html#SECTION00422000000000000000">Bacula
console</A> after the magazine is initialized.</P>
<P CLASS="western" STYLE="margin-top: 0.08in"><BR><BR>
</P>
</BODY>
</HTML>